openapi: 3.0.0
info:
  title: Weather and User Management API
  version: 1.0.0
paths:
  /cities:
    get:
      summary: Get a list of cities
      responses:
        '200':
          description: A list of cities
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example: [
                "Austin",
                "Charlotte",
                "Chicago",
                "Columbus",
                "Dallas",
                "Denver",
                "Fort Worth",
                "Houston",
                "Indianapolis",
                "Jacksonville",
                "London",
                "Los Angeles",
                "Philadelphia",
                "Phoenix",
                "San Antonio",
                "San Diego",
                "San Francisco",
                "San Jose",
                "Seattle",
                "Washington"
              ]
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /city/{city}/forecast:
    get:
      summary: Get the forecast for a city
      parameters:
        - in: path
          name: city
          required: true
          schema:
            type: string
            description: The name of the city
      responses:
        '200':
          description: The forecast for the city
          content:
            application/json:
              schema:
                type: object
                properties:
                  country:
                    type: string
                  city:
                    type: string
                  average_temperature:
                    type: number
                  forecasts:
                    type: array
                    items:
                      type: object
                      properties:
                        date_time:
                          type: string
                          format: date-time
                        temperature:
                          type: number
              example:
                country: "GB"
                city: "London"
                average_temperature: 17.30142857142857
                forecasts:
                  - date_time: "2024-07-09T00:00:00Z"
                    temperature: 17.18
                  - date_time: "2024-07-10T00:00:00Z"
                    temperature: 19.57
                  - date_time: "2024-07-11T00:00:00Z"
                    temperature: 19.48
                  - date_time: "2024-07-12T00:00:00Z"
                    temperature: 12.59
                  - date_time: "2024-07-13T00:00:00Z"
                    temperature: 17.27
                  - date_time: "2024-07-14T00:00:00Z"
                    temperature: 19.3
                  - date_time: "2024-07-15T00:00:00Z"
                    temperature: 15.72
        '404':
          description: City not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /city/{city}/weather/{datetime}:
    get:
      summary: Get the weather for a city at a specific date and time
      parameters:
        - in: path
          name: city
          required: true
          schema:
            type: string
            description: The name of the city
        - in: path
          name: datetime
          required: true
          schema:
            type: string
            format: date-time
            description: The date and time for the weather data
      responses:
        '200':
          description: The weather data for the city at the specified date and time
          content:
            application/json:
              schema:
                type: object
                properties:
                  city_name:
                    type: string
                  temp:
                    type: number
                  date:
                    type: string
                  data:
                    type: object
              example:
                city_name: "London"
                temp: 17.18
                date: "2024-07-09 18:00:00"
                data:
                  dt: 1720548000
                  pop: 1
                  sys:
                    pod: "d"
                  main:
                    temp: 17.18
                  rain:
                    3h: 0.17
                  wind:
                    deg: 194
                    gust: 9.53
                    speed: 3.62
                  clouds:
                    all: 100
                  dt_txt: "2024-07-09 18:00:00"
                  weather:
                    - id: 500
                      icon: "10d"
                      main: "Rain"
                      description: "light rain"
                  visibility: 10000
        '404':
          description: City or weather data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  password:
                    type: string
              example:
                id: 3
                username: "exampleUser3"
                password: "examplePassword3"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /login:
    post:
      summary: Log in a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  password:
                    type: string
              example:
                id: 1
                username: "exampleUser"
                password: "examplePassword"
        '400':
          description: Invalid username or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /favorite:
    post:
      summary: Add a favorite city for a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                city_name:
                  type: string
      responses:
        '201':
          description: Favorite city added successfully
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: User or city not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '409':
          description: Duplicate entry for favorite city
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
